{"ast":null,"code":"var _jsxFileName = \"/Users/mannyrodriguez/Desktop/Projects/React2023/react-context/src/components/KanbanView/KanbanView.tsx\";\nimport { KanbanViewRoot, Column } from \"./KanbanView.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst KanbanView = props => {\n  // Let's assume Status isn't user-defined, but rather platform universal\n  // We'll make columns for \"Not Started\", \"In Progress\", \"Awaiting Approval\", and \"Completed\";\n  // We'll skip over \"Abandoned\" as it's not likely to be useful to display here.\n  const viableStatus = [\"Not Started\", \"In Progress\", \"Awaiting Approval\", \"Completed\"];\n  return /*#__PURE__*/_jsxDEV(KanbanViewRoot, {\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      children: \"Column 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      children: \"Column 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      children: \"Column 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      children: \"Column 4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = KanbanView;\nexport default KanbanView;\n\nvar _c;\n\n$RefreshReg$(_c, \"KanbanView\");","map":{"version":3,"sources":["/Users/mannyrodriguez/Desktop/Projects/React2023/react-context/src/components/KanbanView/KanbanView.tsx"],"names":["KanbanViewRoot","Column","KanbanView","props","viableStatus"],"mappings":";AAEA,SAASA,cAAT,EAAyBC,MAAzB,QAAuC,qBAAvC;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAiC;AAClD;AACA;AACA;AACA,QAAMC,YAAsB,GAAG,CAC7B,aAD6B,EAE7B,aAF6B,EAG7B,mBAH6B,EAI7B,WAJ6B,CAA/B;AAOA,sBACE,QAAC,cAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnBD;;KAAMF,U;AAqBN,eAAeA,UAAf","sourcesContent":["import { Task, Status, allTasks } from \"../../tasks\";\nimport Card from \"../Card/Card\";\nimport { KanbanViewRoot, Column } from \"./KanbanView.styles\";\n\nconst KanbanView = (props: { allTasks: Task[] }) => {\n  // Let's assume Status isn't user-defined, but rather platform universal\n  // We'll make columns for \"Not Started\", \"In Progress\", \"Awaiting Approval\", and \"Completed\";\n  // We'll skip over \"Abandoned\" as it's not likely to be useful to display here.\n  const viableStatus: Status[] = [\n    \"Not Started\",\n    \"In Progress\",\n    \"Awaiting Approval\",\n    \"Completed\",\n  ];\n\n  return (\n    <KanbanViewRoot>\n      <Column>Column 1</Column>\n      <Column>Column 2</Column>\n      <Column>Column 3</Column>\n      <Column>Column 4</Column>\n    </KanbanViewRoot>\n  );\n};\n\nexport default KanbanView;\n"]},"metadata":{},"sourceType":"module"}