{"ast":null,"code":"var _jsxFileName = \"/Users/mannyrodriguez/Desktop/Projects/React2023/react-context/src/components/App/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Display from \"../Display/Display\";\nimport { AppDiv, Title } from \"./App.styles\";\nimport { user_data } from \"../../user_data\";\nimport { idxIncrement } from \"../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [userData, setUserData] = useState(user_data);\n  let timer; // INSERT TIMER\n\n  useEffect(() => {\n    timer = setInterval(() => {\n      let newUserData = [...userData];\n      console.log(\"interval running from App\");\n      idxIncrement().forEach(element => {\n        let user = newUserData[element.idx];\n\n        if (user.name !== \"You\") {\n          user.msTime += element.inc;\n        }\n      });\n      console.log(\"Increments complete from App\");\n      setUserData(newUserData);\n    }, 2000);\n    return () => clearInterval(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppDiv, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uD83E\\uDD2F Memory Matching Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      userData: userData,\n      setUserData: setUserData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"94tO/oThXnGtKH5rmKWOko9C4AE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mannyrodriguez/Desktop/Projects/React2023/react-context/src/components/App/App.tsx"],"names":["useEffect","useState","Display","AppDiv","Title","user_data","idxIncrement","App","userData","setUserData","timer","setInterval","newUserData","console","log","forEach","element","user","idx","name","msTime","inc","clearInterval"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,cAA9B;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,aAA7B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAaI,SAAb,CAAxC;AAEA,MAAIK,KAAJ,CAHgB,CAIhB;;AACAV,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,KAAK,GAAGC,WAAW,CAAC,MAAM;AACxB,UAAIC,WAAW,GAAG,CAAC,GAAGJ,QAAJ,CAAlB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAR,MAAAA,YAAY,GAAGS,OAAf,CAAwBC,OAAD,IAAa;AAClC,YAAIC,IAAI,GAAGL,WAAW,CAACI,OAAO,CAACE,GAAT,CAAtB;;AACA,YAAID,IAAI,CAACE,IAAL,KAAc,KAAlB,EAAyB;AACvBF,UAAAA,IAAI,CAACG,MAAL,IAAeJ,OAAO,CAACK,GAAvB;AACD;AACF,OALD;AAMAR,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAL,MAAAA,WAAW,CAACG,WAAD,CAAX;AACD,KAXkB,EAWhB,IAXgB,CAAnB;AAaA,WAAO,MAAIU,aAAa,CAACZ,KAAD,CAAxB;AACD,GAfQ,EAeP,EAfO,CAAT;AAkBA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEF,QAAnB;AAA6B,MAAA,WAAW,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA7BD;;GAAMF,G;;KAAAA,G;AA+BN,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Display from \"../Display/Display\";\nimport { AppDiv, Title } from \"./App.styles\";\nimport { UserInfo } from \"../../types\";\nimport { user_data } from \"../../user_data\";\nimport { idxIncrement } from \"../../utils\";\n\nconst App = () => {\n  const [userData, setUserData] = useState<UserInfo[]>(user_data);\n\n  let timer:NodeJS.Timer;\n  // INSERT TIMER\n  useEffect(()=>{\n    timer = setInterval(() => {\n      let newUserData = [...userData];\n      console.log(\"interval running from App\");\n      idxIncrement().forEach((element) => {\n        let user = newUserData[element.idx];\n        if (user.name !== \"You\") {\n          user.msTime += element.inc;\n        }\n      });\n      console.log(\"Increments complete from App\");\n      setUserData(newUserData);\n    }, 2000);\n\n    return ()=>clearInterval(timer)\n  },[])\n  \n\n  return (\n    <AppDiv>\n      <Title>ðŸ¤¯ Memory Matching Game</Title>\n      <Display userData={userData} setUserData={setUserData} />\n    </AppDiv>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}